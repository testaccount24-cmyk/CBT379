         MACRO                                                          00001
&NAME    GENESIS &REGS=(14,12),&ID=*,&BASE=13,&SAVE=,&LV=,&SP=0,       *00002
               &CSECT=,&EQU=(N,N),&TYPE=                                00003
.*                                                                      00004
         GBLA  &ESAVEC(2),&ESAVEL,&ESAVEB(2)                            00005
         GBLB  &ESAVES(3)                                               00006
         GBLC  &ESAVEX                                                  00007
         LCLA  &A,&B,&C,&IDL,&R,&D                                      00008
         LCLB  &F,&R13,&DC                                              00009
         LCLC  &IDC                                                     00010
.*                                                                      00011
.*       GENESIS (EXTENDED SAVE) FUNCTION                               00012
.*             REWRITTEN 09-01-74, MACRO LEVEL 4                        00013
.*                                                                      00014
.*       THIS MACRO SUPPORTS THE FOLLOWING MODES: IN-LINE SAVE AREA,    00015
.*       REMOTE SAVE AREA, DYNAMICALLY-OBTAINED SAVE AREA.     08-01-74 00016
.*                                                                      00017
.*       NOTE: THIS MACRO CALLS ITSELF RECURSIVELY TO EXPAND THE STM    00018
.*             INSTRUCTION; THIS SAVES CODE FROM BEING DUPLICATED AND   00019
.*             THE NECESSITY OF USING THE IBM SAVE MACRO WHICH IS       00020
.*             NOT COMPATIBLE WITH ALL OF THE MODES SUPPORTED BY THIS   00021
.*             MACRO.  THE TYPE PARAMETER DETERMINES IF THIS IS A       00022
.*             RECURSIVE CALL TO THIS MACRO.                            00023
.*                                                                      00024
.*                                                                      00025
         AIF   ('&TYPE(1)' NE 'RECURSIVE').GO  IS THIS A RECURSIVE CALL 00026
.*                                                                      00027
         AIF   ('&NAME' EQ '').I1  IF SO, SHOULD WE GENERATE THE 'DS'?  00028
&NAME    DS    0H                                                       00029
.I1      ANOP                                                           00030
         AIF   ('&REGS' NE '').I2  REGS MAY VALIDLY BE NULL             00031
         MEXIT                     IF SO, WE DON'T GENERATE ANYTHING    00032
.*                                                                      00033
.I2      ANOP                                                           00034
&A       SETA  20+4*&REGS(1)       OFFSET IF &REGS(1) ISN'T 14 OR 15    00035
         AIF   (&REGS(1) NE 14 AND &REGS(1) NE 15).I3                   00036
&A       SETA  12+(&REGS(1)-14)*4  OFFSET FOR 14 OR 15 TO FIRST WORD    00037
.I3      ANOP                                                           00038
         AIF   (N'&REGS EQ 2).I5   IF STM IS DESIRED, GO PROCESS IT     00039
.I4      ANOP                                                           00040
         AIF   ('&TYPE(2)' EQ 'L').I4A  IF CALLED FROM ERETURN          00041
         ST    &REGS(1),&A.(,13)                                        00042
         MEXIT                                                          00043
.I4A     ANOP                                                           00044
         L     &REGS(1),&A.(,13)                                        00045
         MEXIT                                                          00046
.*                                                                      00047
.I5      ANOP                                                           00048
         AIF   (&REGS(1) EQ &REGS(2)).I4  DON'T GEN A 'STM RX,RX,...'   00049
         AIF   (&REGS(1) LT &REGS(2)).I6  WE WILL PERFORM THIS LOGICAL  00050
         AIF   (&REGS(1) EQ 14 OR &REGS(1) EQ 15).I6  FOR THE USER      00051
         IHBERMAC 1001,REGS,&REGS  ELSE FLAG INVALID STM SEQUENCE       00052
         MEXIT                                                          00053
.*                                                                      00054
.I6      ANOP                                                           00055
         AIF   ('&TYPE(2)' EQ 'L').I7  IF CALLED FROM ERETURN           00056
         STM   &REGS(1),&REGS(2),&A.(13)                                00057
         MEXIT                                                          00058
.I7      ANOP                                                           00059
         LM    &REGS(1),&REGS(2),&A.(13)                                00060
         MEXIT                                                          00061
.*                                                                      00062
.*       END OF RECURSIVE CALL PROCESSING                               00063
.*                                                                      00064
.*                                                                      00065
.*       NORMAL GENESIS PROCESSING                                      00066
.*                                                                      00067
.GO      ANOP                                                           00068
         AIF   ('&CSECT' EQ '').GX WE WILL PROCESS THE CSECT NAME FIRST 00069
.*                                 SO THAT THE REST OF THE ASSEMBLY MAY 00070
.*                                 PROCEED EVEN THO THERE MAY BE        00071
.*                                 ERRORS IN THE GENESIS CALL.          00072
&CSECT   CSECT                                                          00073
         AGO   .G1                                                      00074
.*                                                                      00075
.GX      ANOP                                                           00076
         CNOP 0,8                                                       00077
.G1      ANOP                                                           00078
.*             NOW WE PROCEED WITH ERROR CHECKING ON THE INPUT PARMS.   00079
.*                                                                      00080
         AIF   ('&BASE' NE '').G2  WE MUST HAVE BASE REGISTERS          00081
         IHBERMAC 1014,BASE        ELSE FLAG THE CALL                   00082
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00083
.*                                                                      00084
.G2      ANOP                                                           00085
         AIF   (N'&REGS LE 2).G3   CAN HAVE AT MOST 2 REGS HERE         00086
         IHBERMAC 1012,REGS        ELSE FLAG THE CALL                   00087
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00088
.*                                                                      00089
.G3      ANOP                                                           00090
         AIF   ('&REGS' NE '').G3A BYPASS CHECKS IF REGS IS NULL        00091
&ESAVEC(1) SETA 100                INDICATE NULL TO ERETURN             00092
         AGO   .G5                 GO CHECK NEXT PARM                   00093
.G3A     ANOP                                                           00094
         AIF   (T'&REGS(1) EQ 'N').G4 FORCE THIS FOR SETA'S             00095
         IHBERMAC 1001,REGS,&REGS(1)  ELSE FLAG THE CALL                00096
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00097
         AGO   .G4A                                                     00098
.*                                                                      00099
.G4      ANOP                                                           00100
&ESAVEC(1) SETA &REGS(1)                                                00101
&ESAVEB(1) SETA &REGS(1)                                                00102
.G4A     ANOP                                                           00103
&ESAVEC(2) SETA 100                                                     00104
&ESAVEB(2) SETA 99                                                      00105
         AIF   (N'&REGS EQ 1).G5   CAN'T CHECK 2 IF THERE'S ONLY 1      00106
         AIF   (T'&REGS(2) EQ 'N').G4B FORCE THIS FOR SETA'S            00107
         IHBERMAC 1001,REGS,&REGS(2) ELSE FLAG THE CALL                 00108
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00109
         AGO   .G5                                                      00110
.G4B     ANOP                                                           00111
&ESAVEC(2) SETA &REGS(2)                                                00112
&ESAVEB(2) SETA &REGS(2)                                                00113
.*                                                                      00114
.G5      ANOP                                                           00115
         AIF   ('&SAVE' EQ '' OR '&LV' EQ '').G6  CAN'T HAVE BOTH       00116
         IHBERMAC 1020,SAVE,LV     FLAG THE CALL                        00117
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00118
.*                                                                      00119
.G6      ANOP                      SCAN ROUTINE FOR BASE=R13            00120
&R       SETA  1                   INITIALIZE LOCATOR                   00121
.G7      ANOP                                                           00122
         AIF   ('&BASE(&R)' NE '13' AND '&BASE(&R)' NE 'R13').G8        00123
&R13     SETB  1                   INDICATE R13 WAS FOUND               00124
         AGO   .G9                 GO CONTINUE CHECKING                 00125
.G8      ANOP                                                           00126
&R       SETA  &R+1                BUMP LOCATOR                         00127
         AIF   (&R LE N'&BASE).G7  LOOP THRU BASE PARAMETER             00128
.*                                                                      00129
.G9      ANOP                                                           00130
         AIF   ('&SAVE' EQ '' OR NOT &R13).G10  CAN'T HAVE BOTH         00131
         IHBERMAC 1020,SAVE,''BASE=&BASE(&R)''  FLAG THE CALL           00132
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00133
.*                                                                      00134
.G10     ANOP                                                           00135
         AIF   ('&LV' EQ '' OR NOT &R13).G11  CAN'T HAVE BOTH           00136
         IHBERMAC 1020,LV,''BASE=&BASE(&R)''  FLAG THE CALL             00137
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00138
.*                                                                      00139
.G11     ANOP                                                           00140
         AIF   ('&SAVE' EQ '').G15 BYPASS SAVE CHECKING IF NULL         00141
         AIF   (N'&SAVE EQ 1 OR N'&SAVE EQ 3 OR N'&SAVE EQ 4).G12       00142
         IHBERMAC 1012,SAVE        ONLY GOOD VALUES AREA 1, 3, AND 4    00143
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00144
.*                                                                      00145
.G12     ANOP                                                           00146
         AIF   ('&SAVE(1)' NE '').G13  MUST HAVE SAVE AREA NAME         00147
         IHBERMAC 1010,SAVE,FIRST  FLAG THE CALL                        00148
&F       SETB  1                   SET FAIL FLAG AND KEEP GOING         00149
.*                                                                      00150
.G13     ANOP                                                           00151
         AIF   (N'&SAVE EQ 1).G15  IF SAVE AREA ONLY, SKIP CHECKS       00152
         AIF   ('&SAVE(3)' NE '').G14  MUST HAVE A REGISTER             00153
         IHBERMAC 1010,SAVE,THIRD  FLAG THE CALL                        00154
&F       SETB  1                   SET FAIL FLAG AND CONTINUE           00155
.*                                                                      00156
.G14     ANOP                                                           00157
         AIF   ('&SAVE(2)' NE '' OR '&SAVE(4)' NE '').G15               00158
         IHBERMAC 1001,SAVE,&SAVE  MUST HAVE ONE OR THE OTHER           00159
&F       SETB  1                   SET FAIL FLAG AND CONTINUE           00160
.*                                                                      00161
.G15     ANOP                                                           00162
.*                                                                      00163
.*       IF ANY OF THE PRECEEDING CHECKS FAILED, THE FAIL FLAG IS SET   00164
.*       AND WE EXIT THE MACRO HERE.  FROM THIS POINT ON THE INPUT      00165
.*       PARAMETERS ARE ASSUMED TO BE VALID.                            00166
.*                                                                      00167
.G16     ANOP                                                           00168
         AIF   (NOT &F).GEN        IF FLAG IS OFF, GO GEN CODE          00169
         MEXIT                                                          00170
.*                                                                      00171
.*                                                                      00172
.GEN     ANOP                                                           00173
&ESAVES(3) SETB 1                  INDICATE GENESIS IS GO               00174
*                                                                       00175
         AIF   ('&ID(1)' EQ '' AND '&LV' NE '').GEN0  SKIP USING        00176
         USING *,15                                                     00177
         AIF   (NOT &R13 OR '&ID(2)' NE 'P').GEN0                       00178
*                                                                       00179
&NAME    B     IHB&SYSNDX                                               00180
*                                                                       00181
         DROP  15                                                       00182
.*                                                                      00183
.GEN0    ANOP                                                           00184
&IDL     SETA  0                   INITIALIZE ID LENGTH                 00185
         AIF   ('&ID(1)' EQ '').GEN10 IF NO ID, BYPASS THIS CODE        00186
         AIF   ('&ID(1)' EQ '*').GEN7 IF CSECT NAME OR LABEL, GO PROCES 00187
&IDL     SETA  K'&ID(1)            ELSE SET ID LENGTH                   00188
&IDC     SETC  '&ID(1)'            SET ID FOR LATER                     00189
         AGO   .GEN10              GO PROCESS BRANCH                    00190
.GEN7    ANOP                                                           00191
         AIF   ('&CSECT' NE '').GEN7A  USE GENERATED CSECT IF PRESENT   00192
         AIF   ('&SYSECT' EQ ' ').GEN8  IF WE'RE IN PC GO USE &NAME     00193
&IDL     SETA  K'&SYSECT           ELSE SET LENGTH                      00194
&IDC     SETC  '&SYSECT'           SET ID                               00195
         AGO   .GEN10              THEN GO PROCESS BRANCH               00196
.GEN7A   ANOP                                                           00197
&IDL     SETA  K'&CSECT            SET LENGTH OF ID                     00198
&IDC     SETC  '&CSECT'            SET ID                               00199
         AGO   .GEN10              GO GENERATE BRANCH                   00200
.GEN8    ANOP                                                           00201
         AIF   ('&NAME' NE '').GEN9 IF THERE IS A NAME, USE IT          00202
         IHBERMAC 78               ELSE FLAG FUNNY CONDITION            00203
         AGO   .GEN10              AND KEEP GENERATING                  00204
.GEN9    ANOP                                                           00205
&IDL     SETA  K'&NAME             SET ID LENGTH                        00206
&IDC     SETC  '&NAME'             SET ID                               00207
.*                                                                      00208
.*                                                                      00209
.GEN10   ANOP                                                           00210
         AIF   (&R13).R13          IF R13 IS A BASE, IT MUST BE FIRST   00211
         USING *,&BASE(1)                                               00212
&A       SETA  2                   START SCAN AT SECOND                 00213
         AGO   .GEN1               GO GENERATE USINGS                   00214
.*                                                                      00215
.R13     ANOP                                                           00216
&A       SETA  1                                                        00217
&D       SETA  0                                                        00218
         AIF   ('&ID(2)' NE 'P' OR &IDL EQ 0).GEN1A                     00219
&D       SETA  (&IDL+8)/4*4-4                                           00220
         USING *+&D,&BASE(&R)                                           00221
         AGO   .GEN1                                                    00222
.GEN1A   ANOP                                                           00223
         USING *,&BASE(&R)                                              00224
&A       SETA  1                   START SCAN AT BEGINNING              00225
.*                                                                      00226
.GEN1    ANOP                                                           00227
         AIF   (N'&BASE EQ 1).GEN4  IF ONLY 1 BASE, SKIP LOOP           00228
&B       SETA  4096+&D             AND SET OFFSET TO SECOND 4K          00229
.GEN2    ANOP                                                           00230
         AIF   (&A EQ &R).GEN3     DON'T GENERATE R13 TWICE             00231
         USING *+&B,&BASE(&A)                                           00232
&B       SETA  &B+4096             BUMP TO NEXT 4K                      00233
.GEN3    ANOP                                                           00234
&A       SETA  &A+1                BUMP TO NEXT BASE REG                00235
         AIF   (&A LE N'&BASE).GEN2 IF MORE TO GEN, LOOP THRU THEM      00236
.*                                                                      00237
.GEN4    ANOP                                                           00238
         AIF   (N'&SAVE LE 1).GEN6 IF NO COMMON AREA USING, BYPASS IT   00239
         AIF   ('&SAVE(4)' EQ '').GEN5 TEST FOR DSECT NAME FIRST        00240
         USING &SAVE(4),&SAVE(3)                                        00241
         AGO   .GEN6               THEN GO PROCESS ID                   00242
.GEN5    ANOP                                                           00243
         USING &SAVE(2),&SAVE(3)                                        00244
.GEN6    ANOP                                                           00245
*                                                                       00246
         AIF   (&IDL EQ 0 AND '&LV' NE '').GEN34  IF NO BR, GO GEN RENT 00247
         AIF   (&R13 AND '&ID(2)' EQ 'P').GEN6A                         00248
&NAME    B     IHB&SYSNDX                                               00249
*                                                                       00250
         DROP  15                                                       00251
.GEN6A   ANOP                                                           00252
&B       SETA  (&IDL+8)/4*4        OFFSET OF FIRST FULLWORD AFTER ID    00253
         AIF   ('&SAVE' NE '' OR '&LV' NE '' OR                        *00254
               ('&ID(2)' EQ 'P' AND &IDL GT 0)).GEN11                   00255
         DC    17F'0'                                                   00256
&B       SETA  0                   RESET OFFSET TO SAVE AREA TO 0       00257
.*                                                                      00258
.GEN11   ANOP                                                           00259
         AIF   (&IDL EQ 0).GEN12   IF THERE IS NO ID, SKIP IT           00260
         DC    AL1(&IDL),C'&IDC'                                        00261
.*                                                                      00262
.GEN12   ANOP                                                           00263
         AIF   ('&LV' NE '').GEN25 IF WE NEED RENT CODE, GO DO IT       00264
         AIF   (&B EQ 0 OR '&SAVE' NE '').GEN13  IF ALREADY GEN'ED A SA 00265
         DC    18F'0'                                                   00266
.*                                                                      00267
.GEN13   ANOP                                                           00268
         AIF   ('&SAVE(2)' EQ '').GEN14  IF NO CSECT NAME, BYPASS IT    00269
         DC    AL4(&SAVE(2))                                            00270
.*                                                                      00271
.GEN14   ANOP                                                           00272
*                                                                       00273
IHB&SYSNDX GENESIS REGS=&REGS,TYPE=RECURSIVE  GENERATE THE STM          00274
.*                                                                      00275
         AIF   (&IDL GT 0 OR '&SAVE' NE '' OR &B GT 0).GEN21            00276
.GEN14A  ANOP                                                           00277
         ST    13,4(,15)                                                00278
         ST    15,8(,13)                                                00279
.*                                                                      00280
.GEN15   ANOP                                                           00281
         AIF   (N'&BASE EQ 1).GEN16 DON'T NEED LA FOR 1 BASE            00282
         LA    14,4095                                                  00283
.*                                                                      00284
.GEN16   ANOP                                                           00285
         AIF   (&R13).GEN17        IF WE NEED ONLY 13, GO DO IT         00286
         AIF   ('&SAVE' NE '' OR &B GT 0).GEN16A                        00287
         LR    13,15                                                    00288
.GEN16A  ANOP                                                           00289
         LR    &BASE(1),15                                              00290
&A       SETA  2                   SET BASE INDEX TO 2                  00291
&C       SETA  1                   SET LAST BASE TO 1                   00292
         AGO   .GEN18              GO GENERATE LA'S                     00293
.GEN17   ANOP                                                           00294
         AIF   (&B GT 0).GEN17A                                         00295
         LR    &BASE(&R),15                                             00296
.GEN17A  ANOP                                                           00297
&A       SETA  1                   SET BASE INDEX TO 1                  00298
&C       SETA  &R                  SET LAST BASE TO R13 LOCATOR         00299
.GEN18   ANOP                                                           00300
         AIF   (&A GT N'&BASE).GEN20  IF ALL BASES SET, EXIT LOOP       00301
         AIF   (&A EQ &R).GEN19    DON'T CLOBBER R13                    00302
         LA    &BASE(&A),1(14,&BASE(&C))                                00303
&C       SETA  &A                  COPY LAST GEN'ED BASE INDEX          00304
.GEN19   ANOP                                                           00305
&A       SETA  &A+1                BUMP TO NEXT BASE                    00306
         AGO   .GEN18              LOOP THRU BASES                      00307
.*                                                                      00308
.GEN20   ANOP                                                           00309
         AIF (N'&SAVE EQ 1).GEN24                                       00310
*                                                                       00311
         AGO   .EQU                GO TERMINATE MACRO                   00312
.*                                                                      00313
.GEN21   ANOP                                                           00314
         AIF   ('&SAVE' NE '').GEN23 GO PROCESS REMOTE SAVE AREA        00315
         AIF   (&B EQ 0).GEN14A    IF 17 WORD SA, GO SET UP REGS        00316
         LR    14,13                                                    00317
         LA    13,&B.(,15)                                              00318
.*                                                                      00319
.GEN22   ANOP                                                           00320
         ST    14,4(,13)                                                00321
         ST    13,8(,14)                                                00322
         AIF (N'&SAVE EQ 1).EQU                                         00323
         AGO   .GEN15              GO GENERATE LA'S                     00324
.*                                                                      00325
.*       PROCESS REMOTE SAVE AREA                                       00326
.*                                                                      00327
.GEN23   ANOP                                                           00328
         AIF (N'&SAVE EQ 1).GEN15                                       00329
         AIF   ('&SAVE(2)' EQ '').GEN24  NEED TO SET REG?               00330
         AIF   (&IDL EQ 0).GEN23A                                       00331
&C       SETA  &IDL+5                                                   00332
         AGO   .GEN23B                                                  00333
.GEN23A  ANOP                                                           00334
&C       SETA  4                                                        00335
.GEN23B  ANOP                                                           00336
         ICM   &SAVE(3),15,&C.(15)                                      00337
.GEN24   ANOP                                                           00338
         LR    14,13                                                    00339
         LA    13,&SAVE(1)                                              00340
         AGO   .GEN22              GO GENERATE LA'S                     00341
.*                                                                      00342
.*       PROCESS REENTRANT CODE                                         00343
.*                                                                      00344
.GEN25   ANOP                                                           00345
         AIF   ('&ID' EQ '' OR &IDL GT 0).GEN26 NEED DROP?              00346
         DROP  15                                                       00347
.*                                                                      00348
.GEN26   ANOP                                                           00349
         AIF   (T'&LV EQ 'N' AND T'&SP EQ 'N').GEN28 MAY NOT NEED DC    00350
.GEN27   ANOP                                                           00351
         DC    AL1(&SP),AL3(&LV)                                        00352
&DC      SETB  1                   INDICATE DC GENERATED                00353
         AGO   .GEN29              GO GENERATE STM                      00354
.*                                                                      00355
.GEN28   ANOP                                                           00356
         AIF   (&LV GT 4096 OR &SP NE 0).GEN27 NEED DC FOR THESE        00357
.GEN29   ANOP                                                           00358
*                                                                       00359
IHB&SYSNDX GENESIS REGS=&REGS,TYPE=RECURSIVE GENERATE STM               00360
.GEN30   ANOP                                                           00361
&ESAVES(1) SETB 1                  INDICATE RENT CODE                   00362
         LR    &BASE(1),15                                              00363
         LR    14,1                                                     00364
         AIF   (&DC).GEN31         DID WE GENERATE A DC?                00365
&ESAVEL  SETA  &LV                 SAVE LENGTH                          00366
         LA    0,&LV                                                    00367
         AGO   .GEN32              THEN GO CONTINUE CODE                00368
.GEN31   ANOP                                                           00369
         AIF   (&IDL EQ 0).GEN31A                                       00370
&C       SETA  &IDL+5                                                   00371
         AGO   .GEN31B                                                  00372
.GEN31A  ANOP                                                           00373
&C       SETA  4                                                        00374
.GEN31B  ANOP                                                           00375
&ESAVES(2) SETB 1                  INDICATE DC GEN'ED                   00376
&ESAVEL  SETA  &C                  SAVE OFFSET                          00377
&ESAVEX  SETC  '&BASE(1)'          COPY BASE REG                        00378
         ICM   0,15,&C.(15)                                             00379
.GEN32   ANOP                                                           00380
         LNR   1,15                                                     00381
         SVC   10                                                       00382
         ST    13,4(,1)                                                 00383
         ST    1,8(,13)                                                 00384
         ST    15,8(,1)                                                 00385
         LR    13,1                                                     00386
         LR    1,14                                                     00387
         AIF   (N'&BASE EQ 1).GEN20 GO GENERATE THE *                   00388
         LA    14,4095                                                  00389
&A       SETA  2                   SET INDEX                            00390
.GEN33   ANOP                                                           00391
         AIF   (&A GT N'&BASE).GEN20  EXIT HERE WHEN DONE               00392
         LA    &BASE(&A),1(14,&BASE(&A-1))                              00393
&A       SETA  &A+1                BUMP TO NEXT GUY                     00394
         AGO   .GEN33              LOOP THRU BASES                      00395
.*                                                                      00396
.GEN34   ANOP                                                           00397
         AIF   (T'&LV NE 'N' OR T'&SP NE 'N').GEN11  NEED BRANCH?       00398
         AIF   (&LV GT 4095 OR &SP NE 0).GEN11  IF SO, GO GEN IT        00399
*                                                                       00400
&NAME    GENESIS REGS=&REGS,TYPE=RECURSIVE GEN STM                      00401
         AGO   .GEN30              GO GEN RENT CODE                     00402
.*                                                                      00403
.*                                                                      00404
.*       PROCESS EQUATE REQUEST                                         00405
.*                                                                      00406
.EQU     ANOP                                                           00407
         AIF   ('&EQU(1)' NE 'Y').EQU2  IF NOT GEN REGS                 00408
*                                                                       00409
R0       EQU   0                                                        00410
R1       EQU   1                                                        00411
R2       EQU   2                                                        00412
R3       EQU   3                                                        00413
R4       EQU   4                                                        00414
R5       EQU   5                                                        00415
R6       EQU   6                                                        00416
R7       EQU   7                                                        00417
R8       EQU   8                                                        00418
R9       EQU   9                                                        00419
R10      EQU   10                                                       00420
R11      EQU   11                                                       00421
R12      EQU   12                                                       00422
R13      EQU   13                                                       00423
R14      EQU   14                                                       00424
R15      EQU   15                                                       00425
*                                                                       00426
.*                                                                      00427
.EQU2    ANOP                                                           00428
         AIF   ('&EQU(2)' NE 'Y').END                                   00429
*                                                                       00430
F0       EQU   0                                                        00431
F2       EQU   2                                                        00432
F4       EQU   4                                                        00433
F6       EQU   6                                                        00434
*                                                                       00435
.*                                                                      00436
.END     ANOP                                                           00437
*                                                                       00438
         MEND                                                           00439
